// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "twitter_clone.proto" (package "twitter_clone", syntax proto3)
// tslint:disable
import { Tweet } from "./twitter_clone";
import type { UnlikeTweetCommentResponse } from "./twitter_clone";
import type { UnlikeTweetCommentRequest } from "./twitter_clone";
import type { LikeTweetCommentResponse } from "./twitter_clone";
import type { LikeTweetCommentRequest } from "./twitter_clone";
import type { DeleteTweetCommentResponse } from "./twitter_clone";
import type { DeleteTweetCommentRequest } from "./twitter_clone";
import type { CreateTweetCommentResponse } from "./twitter_clone";
import type { CreateTweetCommentRequest } from "./twitter_clone";
import type { GetTweetCommentsResponse } from "./twitter_clone";
import type { GetTweetCommentRequest } from "./twitter_clone";
import type { UnlikeTweetResponse } from "./twitter_clone";
import type { UnlikeTweetRequest } from "./twitter_clone";
import type { LikeTweetResponse } from "./twitter_clone";
import type { LikeTweetRequest } from "./twitter_clone";
import type { GetAllTweetRequest } from "./twitter_clone";
import type { GetTweetResponse } from "./twitter_clone";
import type { GetLoginTweetRequest } from "./twitter_clone";
import type { EditTweetResponse } from "./twitter_clone";
import type { EditTweetRequest } from "./twitter_clone";
import type { DeleteTweetResponse } from "./twitter_clone";
import type { DeleteTweetRequest } from "./twitter_clone";
import type { CreateTweetResponse } from "./twitter_clone";
import type { CreateTweetRequest } from "./twitter_clone";
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { User } from "./twitter_clone";
import type { FollowRequest } from "./twitter_clone";
import type { UserResponse } from "./twitter_clone";
import type { GetUserRequest } from "./twitter_clone";
import type { LogoutUserResponse } from "./twitter_clone";
import type { LogoutUserRequest } from "./twitter_clone";
import type { RegisterUserResponse } from "./twitter_clone";
import type { RegisterUserRequest } from "./twitter_clone";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { LoginUserResponse } from "./twitter_clone";
import type { LoginUserRequest } from "./twitter_clone";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service twitter_clone.User
 */
export interface IUserClient {
    /**
     * @generated from protobuf rpc: LoginUser(twitter_clone.LoginUserRequest) returns (twitter_clone.LoginUserResponse);
     */
    loginUser(input: LoginUserRequest, options?: RpcOptions): UnaryCall<LoginUserRequest, LoginUserResponse>;
    /**
     * @generated from protobuf rpc: RegisterUser(twitter_clone.RegisterUserRequest) returns (twitter_clone.RegisterUserResponse);
     */
    registerUser(input: RegisterUserRequest, options?: RpcOptions): UnaryCall<RegisterUserRequest, RegisterUserResponse>;
    /**
     * @generated from protobuf rpc: LogoutUser(twitter_clone.LogoutUserRequest) returns (twitter_clone.LogoutUserResponse);
     */
    logoutUser(input: LogoutUserRequest, options?: RpcOptions): UnaryCall<LogoutUserRequest, LogoutUserResponse>;
    /**
     * @generated from protobuf rpc: GetUser(twitter_clone.GetUserRequest) returns (twitter_clone.UserResponse);
     */
    getUser(input: GetUserRequest, options?: RpcOptions): UnaryCall<GetUserRequest, UserResponse>;
    /**
     * @generated from protobuf rpc: FollowUser(twitter_clone.FollowRequest) returns (twitter_clone.UserResponse);
     */
    followUser(input: FollowRequest, options?: RpcOptions): UnaryCall<FollowRequest, UserResponse>;
    /**
     * @generated from protobuf rpc: UnfollowUser(twitter_clone.FollowRequest) returns (twitter_clone.UserResponse);
     */
    unfollowUser(input: FollowRequest, options?: RpcOptions): UnaryCall<FollowRequest, UserResponse>;
}
/**
 * @generated from protobuf service twitter_clone.User
 */
export class UserClient implements IUserClient, ServiceInfo {
    typeName = User.typeName;
    methods = User.methods;
    options = User.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: LoginUser(twitter_clone.LoginUserRequest) returns (twitter_clone.LoginUserResponse);
     */
    loginUser(input: LoginUserRequest, options?: RpcOptions): UnaryCall<LoginUserRequest, LoginUserResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoginUserRequest, LoginUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RegisterUser(twitter_clone.RegisterUserRequest) returns (twitter_clone.RegisterUserResponse);
     */
    registerUser(input: RegisterUserRequest, options?: RpcOptions): UnaryCall<RegisterUserRequest, RegisterUserResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<RegisterUserRequest, RegisterUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LogoutUser(twitter_clone.LogoutUserRequest) returns (twitter_clone.LogoutUserResponse);
     */
    logoutUser(input: LogoutUserRequest, options?: RpcOptions): UnaryCall<LogoutUserRequest, LogoutUserResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<LogoutUserRequest, LogoutUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUser(twitter_clone.GetUserRequest) returns (twitter_clone.UserResponse);
     */
    getUser(input: GetUserRequest, options?: RpcOptions): UnaryCall<GetUserRequest, UserResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserRequest, UserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FollowUser(twitter_clone.FollowRequest) returns (twitter_clone.UserResponse);
     */
    followUser(input: FollowRequest, options?: RpcOptions): UnaryCall<FollowRequest, UserResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<FollowRequest, UserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UnfollowUser(twitter_clone.FollowRequest) returns (twitter_clone.UserResponse);
     */
    unfollowUser(input: FollowRequest, options?: RpcOptions): UnaryCall<FollowRequest, UserResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<FollowRequest, UserResponse>("unary", this._transport, method, opt, input);
    }
}
/**
 * @generated from protobuf service twitter_clone.Tweet
 */
export interface ITweetClient {
    /**
     * @generated from protobuf rpc: CreateTweet(twitter_clone.CreateTweetRequest) returns (twitter_clone.CreateTweetResponse);
     */
    createTweet(input: CreateTweetRequest, options?: RpcOptions): UnaryCall<CreateTweetRequest, CreateTweetResponse>;
    /**
     * @generated from protobuf rpc: DeleteTweet(twitter_clone.DeleteTweetRequest) returns (twitter_clone.DeleteTweetResponse);
     */
    deleteTweet(input: DeleteTweetRequest, options?: RpcOptions): UnaryCall<DeleteTweetRequest, DeleteTweetResponse>;
    /**
     * @generated from protobuf rpc: EditTweet(twitter_clone.EditTweetRequest) returns (twitter_clone.EditTweetResponse);
     */
    editTweet(input: EditTweetRequest, options?: RpcOptions): UnaryCall<EditTweetRequest, EditTweetResponse>;
    /**
     * @generated from protobuf rpc: GetLoginTweet(twitter_clone.GetLoginTweetRequest) returns (twitter_clone.GetTweetResponse);
     */
    getLoginTweet(input: GetLoginTweetRequest, options?: RpcOptions): UnaryCall<GetLoginTweetRequest, GetTweetResponse>;
    /**
     * @generated from protobuf rpc: GetAllTweet(twitter_clone.GetAllTweetRequest) returns (twitter_clone.GetTweetResponse);
     */
    getAllTweet(input: GetAllTweetRequest, options?: RpcOptions): UnaryCall<GetAllTweetRequest, GetTweetResponse>;
    /**
     * @generated from protobuf rpc: LikeTweet(twitter_clone.LikeTweetRequest) returns (twitter_clone.LikeTweetResponse);
     */
    likeTweet(input: LikeTweetRequest, options?: RpcOptions): UnaryCall<LikeTweetRequest, LikeTweetResponse>;
    /**
     * @generated from protobuf rpc: UnlikeTweet(twitter_clone.UnlikeTweetRequest) returns (twitter_clone.UnlikeTweetResponse);
     */
    unlikeTweet(input: UnlikeTweetRequest, options?: RpcOptions): UnaryCall<UnlikeTweetRequest, UnlikeTweetResponse>;
    /**
     * @generated from protobuf rpc: GetTweetComments(twitter_clone.GetTweetCommentRequest) returns (twitter_clone.GetTweetCommentsResponse);
     */
    getTweetComments(input: GetTweetCommentRequest, options?: RpcOptions): UnaryCall<GetTweetCommentRequest, GetTweetCommentsResponse>;
    /**
     * @generated from protobuf rpc: CreateTweetComment(twitter_clone.CreateTweetCommentRequest) returns (twitter_clone.CreateTweetCommentResponse);
     */
    createTweetComment(input: CreateTweetCommentRequest, options?: RpcOptions): UnaryCall<CreateTweetCommentRequest, CreateTweetCommentResponse>;
    /**
     * @generated from protobuf rpc: DeleteTweetComment(twitter_clone.DeleteTweetCommentRequest) returns (twitter_clone.DeleteTweetCommentResponse);
     */
    deleteTweetComment(input: DeleteTweetCommentRequest, options?: RpcOptions): UnaryCall<DeleteTweetCommentRequest, DeleteTweetCommentResponse>;
    /**
     * @generated from protobuf rpc: LikeTweetComment(twitter_clone.LikeTweetCommentRequest) returns (twitter_clone.LikeTweetCommentResponse);
     */
    likeTweetComment(input: LikeTweetCommentRequest, options?: RpcOptions): UnaryCall<LikeTweetCommentRequest, LikeTweetCommentResponse>;
    /**
     * @generated from protobuf rpc: UnlikeTweetComment(twitter_clone.UnlikeTweetCommentRequest) returns (twitter_clone.UnlikeTweetCommentResponse);
     */
    unlikeTweetComment(input: UnlikeTweetCommentRequest, options?: RpcOptions): UnaryCall<UnlikeTweetCommentRequest, UnlikeTweetCommentResponse>;
}
/**
 * @generated from protobuf service twitter_clone.Tweet
 */
export class TweetClient implements ITweetClient, ServiceInfo {
    typeName = Tweet.typeName;
    methods = Tweet.methods;
    options = Tweet.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateTweet(twitter_clone.CreateTweetRequest) returns (twitter_clone.CreateTweetResponse);
     */
    createTweet(input: CreateTweetRequest, options?: RpcOptions): UnaryCall<CreateTweetRequest, CreateTweetResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateTweetRequest, CreateTweetResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteTweet(twitter_clone.DeleteTweetRequest) returns (twitter_clone.DeleteTweetResponse);
     */
    deleteTweet(input: DeleteTweetRequest, options?: RpcOptions): UnaryCall<DeleteTweetRequest, DeleteTweetResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteTweetRequest, DeleteTweetResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: EditTweet(twitter_clone.EditTweetRequest) returns (twitter_clone.EditTweetResponse);
     */
    editTweet(input: EditTweetRequest, options?: RpcOptions): UnaryCall<EditTweetRequest, EditTweetResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<EditTweetRequest, EditTweetResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetLoginTweet(twitter_clone.GetLoginTweetRequest) returns (twitter_clone.GetTweetResponse);
     */
    getLoginTweet(input: GetLoginTweetRequest, options?: RpcOptions): UnaryCall<GetLoginTweetRequest, GetTweetResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetLoginTweetRequest, GetTweetResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAllTweet(twitter_clone.GetAllTweetRequest) returns (twitter_clone.GetTweetResponse);
     */
    getAllTweet(input: GetAllTweetRequest, options?: RpcOptions): UnaryCall<GetAllTweetRequest, GetTweetResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetAllTweetRequest, GetTweetResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LikeTweet(twitter_clone.LikeTweetRequest) returns (twitter_clone.LikeTweetResponse);
     */
    likeTweet(input: LikeTweetRequest, options?: RpcOptions): UnaryCall<LikeTweetRequest, LikeTweetResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<LikeTweetRequest, LikeTweetResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UnlikeTweet(twitter_clone.UnlikeTweetRequest) returns (twitter_clone.UnlikeTweetResponse);
     */
    unlikeTweet(input: UnlikeTweetRequest, options?: RpcOptions): UnaryCall<UnlikeTweetRequest, UnlikeTweetResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<UnlikeTweetRequest, UnlikeTweetResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetTweetComments(twitter_clone.GetTweetCommentRequest) returns (twitter_clone.GetTweetCommentsResponse);
     */
    getTweetComments(input: GetTweetCommentRequest, options?: RpcOptions): UnaryCall<GetTweetCommentRequest, GetTweetCommentsResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetTweetCommentRequest, GetTweetCommentsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateTweetComment(twitter_clone.CreateTweetCommentRequest) returns (twitter_clone.CreateTweetCommentResponse);
     */
    createTweetComment(input: CreateTweetCommentRequest, options?: RpcOptions): UnaryCall<CreateTweetCommentRequest, CreateTweetCommentResponse> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateTweetCommentRequest, CreateTweetCommentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteTweetComment(twitter_clone.DeleteTweetCommentRequest) returns (twitter_clone.DeleteTweetCommentResponse);
     */
    deleteTweetComment(input: DeleteTweetCommentRequest, options?: RpcOptions): UnaryCall<DeleteTweetCommentRequest, DeleteTweetCommentResponse> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteTweetCommentRequest, DeleteTweetCommentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LikeTweetComment(twitter_clone.LikeTweetCommentRequest) returns (twitter_clone.LikeTweetCommentResponse);
     */
    likeTweetComment(input: LikeTweetCommentRequest, options?: RpcOptions): UnaryCall<LikeTweetCommentRequest, LikeTweetCommentResponse> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<LikeTweetCommentRequest, LikeTweetCommentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UnlikeTweetComment(twitter_clone.UnlikeTweetCommentRequest) returns (twitter_clone.UnlikeTweetCommentResponse);
     */
    unlikeTweetComment(input: UnlikeTweetCommentRequest, options?: RpcOptions): UnaryCall<UnlikeTweetCommentRequest, UnlikeTweetCommentResponse> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<UnlikeTweetCommentRequest, UnlikeTweetCommentResponse>("unary", this._transport, method, opt, input);
    }
}
