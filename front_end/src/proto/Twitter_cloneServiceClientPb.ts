/**
 * @fileoverview gRPC-Web generated client stub for twitter_clone
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: twitter_clone.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as twitter_clone_pb from './twitter_clone_pb'; // proto import: "twitter_clone.proto"


export class UserClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorLoginUser = new grpcWeb.MethodDescriptor(
    '/twitter_clone.User/LoginUser',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.LoginUserRequest,
    twitter_clone_pb.LoginUserResponse,
    (request: twitter_clone_pb.LoginUserRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.LoginUserResponse.deserializeBinary
  );

  loginUser(
    request: twitter_clone_pb.LoginUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.LoginUserResponse>;

  loginUser(
    request: twitter_clone_pb.LoginUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.LoginUserResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.LoginUserResponse>;

  loginUser(
    request: twitter_clone_pb.LoginUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.LoginUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.User/LoginUser',
        request,
        metadata || {},
        this.methodDescriptorLoginUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.User/LoginUser',
    request,
    metadata || {},
    this.methodDescriptorLoginUser);
  }

  methodDescriptorRegisterUser = new grpcWeb.MethodDescriptor(
    '/twitter_clone.User/RegisterUser',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.RegisterUserRequest,
    twitter_clone_pb.RegisterUserResponse,
    (request: twitter_clone_pb.RegisterUserRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.RegisterUserResponse.deserializeBinary
  );

  registerUser(
    request: twitter_clone_pb.RegisterUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.RegisterUserResponse>;

  registerUser(
    request: twitter_clone_pb.RegisterUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.RegisterUserResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.RegisterUserResponse>;

  registerUser(
    request: twitter_clone_pb.RegisterUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.RegisterUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.User/RegisterUser',
        request,
        metadata || {},
        this.methodDescriptorRegisterUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.User/RegisterUser',
    request,
    metadata || {},
    this.methodDescriptorRegisterUser);
  }

  methodDescriptorLogoutUser = new grpcWeb.MethodDescriptor(
    '/twitter_clone.User/LogoutUser',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.LogoutUserRequest,
    twitter_clone_pb.LogoutUserResponse,
    (request: twitter_clone_pb.LogoutUserRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.LogoutUserResponse.deserializeBinary
  );

  logoutUser(
    request: twitter_clone_pb.LogoutUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.LogoutUserResponse>;

  logoutUser(
    request: twitter_clone_pb.LogoutUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.LogoutUserResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.LogoutUserResponse>;

  logoutUser(
    request: twitter_clone_pb.LogoutUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.LogoutUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.User/LogoutUser',
        request,
        metadata || {},
        this.methodDescriptorLogoutUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.User/LogoutUser',
    request,
    metadata || {},
    this.methodDescriptorLogoutUser);
  }

  methodDescriptorGetUser = new grpcWeb.MethodDescriptor(
    '/twitter_clone.User/GetUser',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.GetUserRequest,
    twitter_clone_pb.UserResponse,
    (request: twitter_clone_pb.GetUserRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.UserResponse.deserializeBinary
  );

  getUser(
    request: twitter_clone_pb.GetUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.UserResponse>;

  getUser(
    request: twitter_clone_pb.GetUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.UserResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.UserResponse>;

  getUser(
    request: twitter_clone_pb.GetUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.UserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.User/GetUser',
        request,
        metadata || {},
        this.methodDescriptorGetUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.User/GetUser',
    request,
    metadata || {},
    this.methodDescriptorGetUser);
  }

  methodDescriptorFollowUser = new grpcWeb.MethodDescriptor(
    '/twitter_clone.User/FollowUser',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.FollowRequest,
    twitter_clone_pb.UserResponse,
    (request: twitter_clone_pb.FollowRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.UserResponse.deserializeBinary
  );

  followUser(
    request: twitter_clone_pb.FollowRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.UserResponse>;

  followUser(
    request: twitter_clone_pb.FollowRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.UserResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.UserResponse>;

  followUser(
    request: twitter_clone_pb.FollowRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.UserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.User/FollowUser',
        request,
        metadata || {},
        this.methodDescriptorFollowUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.User/FollowUser',
    request,
    metadata || {},
    this.methodDescriptorFollowUser);
  }

  methodDescriptorUnfollowUser = new grpcWeb.MethodDescriptor(
    '/twitter_clone.User/UnfollowUser',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.FollowRequest,
    twitter_clone_pb.UserResponse,
    (request: twitter_clone_pb.FollowRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.UserResponse.deserializeBinary
  );

  unfollowUser(
    request: twitter_clone_pb.FollowRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.UserResponse>;

  unfollowUser(
    request: twitter_clone_pb.FollowRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.UserResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.UserResponse>;

  unfollowUser(
    request: twitter_clone_pb.FollowRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.UserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.User/UnfollowUser',
        request,
        metadata || {},
        this.methodDescriptorUnfollowUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.User/UnfollowUser',
    request,
    metadata || {},
    this.methodDescriptorUnfollowUser);
  }

}

export class TweetClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateTweet = new grpcWeb.MethodDescriptor(
    '/twitter_clone.Tweet/CreateTweet',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.CreateTweetRequest,
    twitter_clone_pb.CreateTweetResponse,
    (request: twitter_clone_pb.CreateTweetRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.CreateTweetResponse.deserializeBinary
  );

  createTweet(
    request: twitter_clone_pb.CreateTweetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.CreateTweetResponse>;

  createTweet(
    request: twitter_clone_pb.CreateTweetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.CreateTweetResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.CreateTweetResponse>;

  createTweet(
    request: twitter_clone_pb.CreateTweetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.CreateTweetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.Tweet/CreateTweet',
        request,
        metadata || {},
        this.methodDescriptorCreateTweet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.Tweet/CreateTweet',
    request,
    metadata || {},
    this.methodDescriptorCreateTweet);
  }

  methodDescriptorDeleteTweet = new grpcWeb.MethodDescriptor(
    '/twitter_clone.Tweet/DeleteTweet',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.DeleteTweetRequest,
    twitter_clone_pb.DeleteTweetResponse,
    (request: twitter_clone_pb.DeleteTweetRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.DeleteTweetResponse.deserializeBinary
  );

  deleteTweet(
    request: twitter_clone_pb.DeleteTweetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.DeleteTweetResponse>;

  deleteTweet(
    request: twitter_clone_pb.DeleteTweetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.DeleteTweetResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.DeleteTweetResponse>;

  deleteTweet(
    request: twitter_clone_pb.DeleteTweetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.DeleteTweetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.Tweet/DeleteTweet',
        request,
        metadata || {},
        this.methodDescriptorDeleteTweet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.Tweet/DeleteTweet',
    request,
    metadata || {},
    this.methodDescriptorDeleteTweet);
  }

  methodDescriptorEditTweet = new grpcWeb.MethodDescriptor(
    '/twitter_clone.Tweet/EditTweet',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.EditTweetRequest,
    twitter_clone_pb.EditTweetResponse,
    (request: twitter_clone_pb.EditTweetRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.EditTweetResponse.deserializeBinary
  );

  editTweet(
    request: twitter_clone_pb.EditTweetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.EditTweetResponse>;

  editTweet(
    request: twitter_clone_pb.EditTweetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.EditTweetResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.EditTweetResponse>;

  editTweet(
    request: twitter_clone_pb.EditTweetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.EditTweetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.Tweet/EditTweet',
        request,
        metadata || {},
        this.methodDescriptorEditTweet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.Tweet/EditTweet',
    request,
    metadata || {},
    this.methodDescriptorEditTweet);
  }

  methodDescriptorGetLoginTweet = new grpcWeb.MethodDescriptor(
    '/twitter_clone.Tweet/GetLoginTweet',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.GetLoginTweetRequest,
    twitter_clone_pb.GetTweetResponse,
    (request: twitter_clone_pb.GetLoginTweetRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.GetTweetResponse.deserializeBinary
  );

  getLoginTweet(
    request: twitter_clone_pb.GetLoginTweetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.GetTweetResponse>;

  getLoginTweet(
    request: twitter_clone_pb.GetLoginTweetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.GetTweetResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.GetTweetResponse>;

  getLoginTweet(
    request: twitter_clone_pb.GetLoginTweetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.GetTweetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.Tweet/GetLoginTweet',
        request,
        metadata || {},
        this.methodDescriptorGetLoginTweet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.Tweet/GetLoginTweet',
    request,
    metadata || {},
    this.methodDescriptorGetLoginTweet);
  }

  methodDescriptorGetAllTweet = new grpcWeb.MethodDescriptor(
    '/twitter_clone.Tweet/GetAllTweet',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.GetAllTweetRequest,
    twitter_clone_pb.GetTweetResponse,
    (request: twitter_clone_pb.GetAllTweetRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.GetTweetResponse.deserializeBinary
  );

  getAllTweet(
    request: twitter_clone_pb.GetAllTweetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.GetTweetResponse>;

  getAllTweet(
    request: twitter_clone_pb.GetAllTweetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.GetTweetResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.GetTweetResponse>;

  getAllTweet(
    request: twitter_clone_pb.GetAllTweetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.GetTweetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.Tweet/GetAllTweet',
        request,
        metadata || {},
        this.methodDescriptorGetAllTweet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.Tweet/GetAllTweet',
    request,
    metadata || {},
    this.methodDescriptorGetAllTweet);
  }

  methodDescriptorLikeTweet = new grpcWeb.MethodDescriptor(
    '/twitter_clone.Tweet/LikeTweet',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.LikeTweetRequest,
    twitter_clone_pb.LikeTweetResponse,
    (request: twitter_clone_pb.LikeTweetRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.LikeTweetResponse.deserializeBinary
  );

  likeTweet(
    request: twitter_clone_pb.LikeTweetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.LikeTweetResponse>;

  likeTweet(
    request: twitter_clone_pb.LikeTweetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.LikeTweetResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.LikeTweetResponse>;

  likeTweet(
    request: twitter_clone_pb.LikeTweetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.LikeTweetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.Tweet/LikeTweet',
        request,
        metadata || {},
        this.methodDescriptorLikeTweet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.Tweet/LikeTweet',
    request,
    metadata || {},
    this.methodDescriptorLikeTweet);
  }

  methodDescriptorUnlikeTweet = new grpcWeb.MethodDescriptor(
    '/twitter_clone.Tweet/UnlikeTweet',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.UnlikeTweetRequest,
    twitter_clone_pb.UnlikeTweetResponse,
    (request: twitter_clone_pb.UnlikeTweetRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.UnlikeTweetResponse.deserializeBinary
  );

  unlikeTweet(
    request: twitter_clone_pb.UnlikeTweetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.UnlikeTweetResponse>;

  unlikeTweet(
    request: twitter_clone_pb.UnlikeTweetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.UnlikeTweetResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.UnlikeTweetResponse>;

  unlikeTweet(
    request: twitter_clone_pb.UnlikeTweetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.UnlikeTweetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.Tweet/UnlikeTweet',
        request,
        metadata || {},
        this.methodDescriptorUnlikeTweet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.Tweet/UnlikeTweet',
    request,
    metadata || {},
    this.methodDescriptorUnlikeTweet);
  }

  methodDescriptorGetTweetComments = new grpcWeb.MethodDescriptor(
    '/twitter_clone.Tweet/GetTweetComments',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.GetTweetCommentRequest,
    twitter_clone_pb.GetTweetCommentsResponse,
    (request: twitter_clone_pb.GetTweetCommentRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.GetTweetCommentsResponse.deserializeBinary
  );

  getTweetComments(
    request: twitter_clone_pb.GetTweetCommentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.GetTweetCommentsResponse>;

  getTweetComments(
    request: twitter_clone_pb.GetTweetCommentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.GetTweetCommentsResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.GetTweetCommentsResponse>;

  getTweetComments(
    request: twitter_clone_pb.GetTweetCommentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.GetTweetCommentsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.Tweet/GetTweetComments',
        request,
        metadata || {},
        this.methodDescriptorGetTweetComments,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.Tweet/GetTweetComments',
    request,
    metadata || {},
    this.methodDescriptorGetTweetComments);
  }

  methodDescriptorCreateTweetComment = new grpcWeb.MethodDescriptor(
    '/twitter_clone.Tweet/CreateTweetComment',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.CreateTweetCommentRequest,
    twitter_clone_pb.CreateTweetCommentResponse,
    (request: twitter_clone_pb.CreateTweetCommentRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.CreateTweetCommentResponse.deserializeBinary
  );

  createTweetComment(
    request: twitter_clone_pb.CreateTweetCommentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.CreateTweetCommentResponse>;

  createTweetComment(
    request: twitter_clone_pb.CreateTweetCommentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.CreateTweetCommentResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.CreateTweetCommentResponse>;

  createTweetComment(
    request: twitter_clone_pb.CreateTweetCommentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.CreateTweetCommentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.Tweet/CreateTweetComment',
        request,
        metadata || {},
        this.methodDescriptorCreateTweetComment,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.Tweet/CreateTweetComment',
    request,
    metadata || {},
    this.methodDescriptorCreateTweetComment);
  }

  methodDescriptorDeleteTweetComment = new grpcWeb.MethodDescriptor(
    '/twitter_clone.Tweet/DeleteTweetComment',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.DeleteTweetCommentRequest,
    twitter_clone_pb.DeleteTweetCommentResponse,
    (request: twitter_clone_pb.DeleteTweetCommentRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.DeleteTweetCommentResponse.deserializeBinary
  );

  deleteTweetComment(
    request: twitter_clone_pb.DeleteTweetCommentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.DeleteTweetCommentResponse>;

  deleteTweetComment(
    request: twitter_clone_pb.DeleteTweetCommentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.DeleteTweetCommentResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.DeleteTweetCommentResponse>;

  deleteTweetComment(
    request: twitter_clone_pb.DeleteTweetCommentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.DeleteTweetCommentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.Tweet/DeleteTweetComment',
        request,
        metadata || {},
        this.methodDescriptorDeleteTweetComment,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.Tweet/DeleteTweetComment',
    request,
    metadata || {},
    this.methodDescriptorDeleteTweetComment);
  }

  methodDescriptorLikeTweetComment = new grpcWeb.MethodDescriptor(
    '/twitter_clone.Tweet/LikeTweetComment',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.LikeTweetCommentRequest,
    twitter_clone_pb.LikeTweetCommentResponse,
    (request: twitter_clone_pb.LikeTweetCommentRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.LikeTweetCommentResponse.deserializeBinary
  );

  likeTweetComment(
    request: twitter_clone_pb.LikeTweetCommentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.LikeTweetCommentResponse>;

  likeTweetComment(
    request: twitter_clone_pb.LikeTweetCommentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.LikeTweetCommentResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.LikeTweetCommentResponse>;

  likeTweetComment(
    request: twitter_clone_pb.LikeTweetCommentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.LikeTweetCommentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.Tweet/LikeTweetComment',
        request,
        metadata || {},
        this.methodDescriptorLikeTweetComment,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.Tweet/LikeTweetComment',
    request,
    metadata || {},
    this.methodDescriptorLikeTweetComment);
  }

  methodDescriptorUnlikeTweetComment = new grpcWeb.MethodDescriptor(
    '/twitter_clone.Tweet/UnlikeTweetComment',
    grpcWeb.MethodType.UNARY,
    twitter_clone_pb.UnlikeTweetCommentRequest,
    twitter_clone_pb.UnlikeTweetCommentResponse,
    (request: twitter_clone_pb.UnlikeTweetCommentRequest) => {
      return request.serializeBinary();
    },
    twitter_clone_pb.UnlikeTweetCommentResponse.deserializeBinary
  );

  unlikeTweetComment(
    request: twitter_clone_pb.UnlikeTweetCommentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<twitter_clone_pb.UnlikeTweetCommentResponse>;

  unlikeTweetComment(
    request: twitter_clone_pb.UnlikeTweetCommentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.UnlikeTweetCommentResponse) => void): grpcWeb.ClientReadableStream<twitter_clone_pb.UnlikeTweetCommentResponse>;

  unlikeTweetComment(
    request: twitter_clone_pb.UnlikeTweetCommentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: twitter_clone_pb.UnlikeTweetCommentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/twitter_clone.Tweet/UnlikeTweetComment',
        request,
        metadata || {},
        this.methodDescriptorUnlikeTweetComment,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/twitter_clone.Tweet/UnlikeTweetComment',
    request,
    metadata || {},
    this.methodDescriptorUnlikeTweetComment);
  }

}

